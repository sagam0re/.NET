@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavManager
@implements IAsyncDisposable

<div class="form-group">
    <lable>
        User: <input @bind="userInput"/>
    </lable>
</div>
<div class="form-group">
    <lable>
        Message: <input @bind="messageInput"/>
    </lable>
</div>
<button @onclick="Send" disabled="@(IsConnected == false)">Send</button>

<hr />
<ul>
    @foreach(string message in messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    private HubConnection? hubConnection;
    private List<string> messages = new ();
    private string? userInput;
    private string? messageInput;

    protected override async Task OnInitializedAsync ()
    {
        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavManager.ToAbsoluteUri("/chathub"))
        .WithAutomaticReconnect()
        .Build();

        hubConnection.On<string, string>("RecieveMessage", (user, message) =>
        {
            var formattedMessage = $"{user}: {message}";
            messages.Add(formattedMessage);
            InvokeAsync(StateHasChanged);
        });

        await hubConnection.StartAsync();
    }

    private async Task Send()
    {
        if (hubConnection is not null)
        {
            await hubConnection.SendAsync("SendMessage", userInput, messageInput);
        }
    }

    private bool IsConnected => hubConnection?.State == HubConnectionState.Connected;

    public async ValueTask DisposeAsync ()
    {
        if (hubConnection is not null)
        {
            await hubConnection.DisposeAsync();  
        }
    }
}